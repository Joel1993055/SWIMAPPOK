const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

async function diagnoseSupabase() {
  console.log(' Diagn√≥stico de Supabase...\n');

  // 1. Verificar variables de entorno
  console.log('1. Verificando variables de entorno:');
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const anonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  
  if (!url) {
    console.log('‚ùå NEXT_PUBLIC_SUPABASE_URL no est√° definida');
    return;
  }
  if (!anonKey) {
    console.log('‚ùå NEXT_PUBLIC_SUPABASE_ANON_KEY no est√° definida');
    return;
  }
  
  console.log('‚úÖ Variables de entorno encontradas');
  console.log(`   URL: ${url.substring(0, 30)}...`);
  console.log(`   Key: ${anonKey.substring(0, 20)}...\n`);

  // 2. Crear cliente Supabase
  console.log('2. Creando cliente Supabase...');
  const supabase = createClient(url, anonKey);
  console.log('‚úÖ Cliente creado exitosamente\n');

  // 3. Probar conexi√≥n b√°sica
  console.log('3. Probando conexi√≥n b√°sica...');
  try {
    const { data, error } = await supabase.from('_supabase_migrations').select('*').limit(1);
    if (error) {
      console.log('‚ö†Ô∏è  Error en consulta de migraciones:', error.message);
    } else {
      console.log('‚úÖ Conexi√≥n b√°sica exitosa');
    }
  } catch (err) {
    console.log('‚ùå Error de conexi√≥n:', err.message);
  }

  // 4. Probar autenticaci√≥n
  console.log('\n4. Probando sistema de autenticaci√≥n...');
  try {
    const { data: { user }, error } = await supabase.auth.getUser();
    if (error) {
      console.log('‚ö†Ô∏è  Error obteniendo usuario:', error.message);
    } else if (user) {
      console.log('‚úÖ Usuario autenticado:', user.email);
    } else {
      console.log('‚ÑπÔ∏è  No hay usuario autenticado (esto es normal)');
    }
  } catch (err) {
    console.log('‚ùå Error de autenticaci√≥n:', err.message);
  }

  // 5. Verificar configuraci√≥n de la base de datos
  console.log('\n5. Verificando configuraci√≥n de la base de datos...');
  try {
    // Intentar acceder a una tabla que deber√≠a existir
    const { data, error } = await supabase
      .from('sessions')
      .select('count')
      .limit(1);
    
    if (error) {
      console.log('‚ö†Ô∏è  Error accediendo a tabla sessions:', error.message);
      console.log('   Esto puede indicar que las tablas no est√°n creadas');
    } else {
      console.log('‚úÖ Tabla sessions accesible');
    }
  } catch (err) {
    console.log('‚ùå Error verificando base de datos:', err.message);
  }

  console.log('\nüèÅ Diagn√≥stico completado');
}

diagnoseSupabase().catch(console.error);
```

Ahora, para diagnosticar el problema espec√≠fico, necesito que ejecutes este comando en tu terminal:

```bash
node scripts/diagnose-supabase.js
```

Pero antes, d√©jame verificar si hay alg√∫n problema espec√≠fico que pueda estar causando el fallo. Bas√°ndome en lo que veo en tu configuraci√≥n, hay algunas posibles causas:

## Posibles problemas identificados:

### 1. **Problema de configuraci√≥n de URL de Supabase**
Veo que tu URL de Supabase parece estar truncada en la imagen: `https://htxyugbuhduocnrkicns.su`. Esto sugiere que la URL podr√≠a estar incompleta.

### 2. **Problema de configuraci√≥n de la base de datos**
Tu aplicaci√≥n espera ciertas tablas (como `sessions`) que podr√≠an no estar creadas en tu proyecto de Supabase.

### 3. **Problema de configuraci√≥n de autenticaci√≥n**
Las pol√≠ticas RLS (Row Level Security) podr√≠an no estar configuradas correctamente.

## Soluciones paso a paso:

### **Paso 1: Verificar la URL completa de Supabase**
Aseg√∫rate de que tu `NEXT_PUBLIC_SUPABASE_URL` sea completa. Deber√≠a verse as√≠:
```
https://tu-proyecto-id.supabase.co
```

### **Paso 2: Verificar que las tablas est√©n creadas**
Ve a tu proyecto de Supabase ‚Üí SQL Editor y ejecuta el script de la base de datos que tienes en `database/supabase-schema.sql`.

### **Paso 3: Verificar la configuraci√≥n de autenticaci√≥n**
Ve a Authentication ‚Üí Settings en tu proyecto de Supabase y aseg√∫rate de que:
- Site URL est√© configurada como `http://localhost:3000` (para desarrollo)
- Redirect URLs incluya `http://localhost:3000/auth/callback`

¬øPuedes verificar estos puntos y decirme qu√© encuentras? Especialmente la URL completa de Supabase y si has ejecutado los scripts de la base de datos.
